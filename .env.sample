# =============================================================================
# Ensenia - AI Teaching Assistant Configuration
# =============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control!

# =============================================================================
# CLOUDFLARE API CREDENTIALS
# =============================================================================
# Get these from: https://dash.cloudflare.com/profile/api-tokens
# You need:
# 1. API Token with permissions for: Workers AI, D1, Vectorize, KV, R2
# 2. Account ID from dashboard URL or account settings

CLOUDFLARE_API_TOKEN=your_api_token_here
CLOUDFLARE_ACCOUNT_ID=your_account_id

# =============================================================================
# CLOUDFLARE R2 (Object Storage for PDFs)
# =============================================================================
# Setup instructions:
# 1. Go to: https://dash.cloudflare.com/ → R2
# 2. Create bucket: ensenia-hackaton (or your preferred name)
# 3. Click "Manage R2 API Tokens" → Create API Token
# 4. Permissions: Object Read & Write
# 5. Copy: Access Key ID, Secret Access Key, Endpoint URL

CLOUDFLARE_R2_BUCKET=ensenia-hackaton
CLOUDFLARE_R2_ACCESS_KEY=your_r2_access_key_id
CLOUDFLARE_R2_SECRET_KEY=your_r2_secret_access_key
CLOUDFLARE_R2_ENDPOINT=https://your-account-id.r2.cloudflarestorage.com

# =============================================================================
# CLOUDFLARE D1 (SQL Database for chunk metadata)
# =============================================================================
# Setup instructions:
# 1. Go to: https://dash.cloudflare.com/ → Workers & Pages → D1
# 2. Click "Create database"
# 3. Name: ensenia-ministry-db (or your preferred name)
# 4. Copy the Database ID from the dashboard

CLOUDFLARE_D1_DATABASE_ID=your_d1_database_id

# =============================================================================
# CLOUDFLARE VECTORIZE (Vector Database for embeddings)
# =============================================================================
# Setup instructions:
# 1. Go to: https://dash.cloudflare.com/ → Workers & Pages → Vectorize
# 2. Click "Create index"
# 3. Name: ensenia-curriculum-embeddings
# 4. Dimensions: 768 (matches BGE base model)
# 5. Metric: cosine

CLOUDFLARE_VECTORIZE_INDEX=ensenia-curriculum-embeddings

# =============================================================================
# CLOUDFLARE KV (Key-Value Cache)
# =============================================================================
# Setup instructions:
# 1. Go to: https://dash.cloudflare.com/ → Workers & Pages → KV
# 2. Click "Create namespace"
# 3. Name: ensenia-cache
# 4. Copy the Namespace ID

CLOUDFLARE_KV_NAMESPACE_ID=your_kv_namespace_id

# =============================================================================
# ELEVENLABS (Text-to-Speech) - OPTIONAL
# =============================================================================
# Get API key from: https://elevenlabs.io/
# Voice ID: Use a Chilean Spanish voice for best results
# Note: Can be left empty if TTS is not needed for development

ELEVENLABS_API_KEY=your_elevenlabs_api_key
ELEVENLABS_VOICE_ID=your_spanish_voice_id

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Environment: development | staging | production
ENVIRONMENT=development

# Enable debug mode (shows detailed error messages)
DEBUG=true

# Logging level: DEBUG | INFO | WARNING | ERROR
LOG_LEVEL=INFO

# =============================================================================
# API SETTINGS
# =============================================================================

# Host to bind the API server (0.0.0.0 allows external access)
API_HOST=0.0.0.0

# Port for the API server
API_PORT=8000

# CORS allowed origins (comma-separated, no spaces)
# Add your frontend URLs here
API_CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# =============================================================================
# CACHE SETTINGS (in seconds)
# =============================================================================

# Default cache TTL for search results and general queries
CACHE_DEFAULT_TTL=3600

# TTS audio cache TTL (longer since audio files are expensive to generate)
CACHE_TTS_TTL=86400

# =============================================================================
# RAG (Retrieval-Augmented Generation) SETTINGS
# =============================================================================

# Number of top results to retrieve from vector search
RAG_TOP_K=10

# Minimum similarity score for search results (0.0 - 1.0)
RAG_MIN_SIMILARITY_SCORE=0.7

# Text chunk size in characters (for PDF processing)
RAG_CHUNK_SIZE=768

# Overlap between chunks in characters (prevents splitting concepts)
RAG_CHUNK_OVERLAP=128

# =============================================================================
# WORKERS AI SETTINGS
# =============================================================================

# Embedding model for generating vector embeddings
# Options: @cf/baai/bge-base-en-v1.5 (768 dims, recommended)
#          @cf/baai/bge-large-en-v1.5 (1024 dims, more accurate but slower)
WORKERS_AI_EMBEDDING_MODEL=@cf/baai/bge-base-en-v1.5

# Embedding dimensions (must match model: 768 for base, 1024 for large)
WORKERS_AI_EMBEDDING_DIMENSIONS=768

# =============================================================================
# CLOUDFLARE WORKER URL
# =============================================================================
# URL of your deployed Cloudflare Worker for Deep Research
# For local development: http://localhost:8787
# For production: https://your-worker.your-subdomain.workers.dev

CLOUDFLARE_WORKER_URL=http://localhost:8787
