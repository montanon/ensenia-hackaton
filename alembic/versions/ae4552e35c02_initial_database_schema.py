"""Initial database schema

Revision ID: ae4552e35c02
Revises:
Create Date: 2025-10-26 01:06:19.936044

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ae4552e35c02"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exercises",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("exercise_type", sa.String(), nullable=False),
        sa.Column("grade", sa.Integer(), nullable=False),
        sa.Column("subject", sa.String(), nullable=False),
        sa.Column("topic", sa.String(), nullable=False),
        sa.Column("content", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("validation_score", sa.Integer(), nullable=False),
        sa.Column("difficulty_level", sa.Integer(), nullable=False),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_exercise_curriculum",
        "exercises",
        ["grade", "subject", "topic", "is_public"],
        unique=False,
    )
    op.create_index(
        "idx_exercise_difficulty",
        "exercises",
        ["grade", "difficulty_level", "is_public"],
        unique=False,
    )
    op.create_index(
        op.f("ix_exercises_created_at"), "exercises", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_exercises_difficulty_level"),
        "exercises",
        ["difficulty_level"],
        unique=False,
    )
    op.create_index(
        op.f("ix_exercises_exercise_type"), "exercises", ["exercise_type"], unique=False
    )
    op.create_index(op.f("ix_exercises_grade"), "exercises", ["grade"], unique=False)
    op.create_index(
        op.f("ix_exercises_is_public"), "exercises", ["is_public"], unique=False
    )
    op.create_index(
        op.f("ix_exercises_subject"), "exercises", ["subject"], unique=False
    )
    op.create_index(op.f("ix_exercises_topic"), "exercises", ["topic"], unique=False)
    op.create_table(
        "sessions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("grade", sa.Integer(), nullable=False),
        sa.Column("subject", sa.String(), nullable=False),
        sa.Column("mode", sa.String(), nullable=False),
        sa.Column("research_context", sa.Text(), nullable=True),
        sa.Column(
            "current_mode", sa.String(length=10), server_default="text", nullable=False
        ),
        sa.Column("ws_connection_id", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_sessions_created_at"), "sessions", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_sessions_grade"), "sessions", ["grade"], unique=False)
    op.create_index(op.f("ix_sessions_mode"), "sessions", ["mode"], unique=False)
    op.create_index(op.f("ix_sessions_subject"), "sessions", ["subject"], unique=False)
    op.create_table(
        "exercise_sessions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("exercise_id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column(
            "assigned_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("student_answer", sa.Text(), nullable=True),
        sa.Column("is_completed", sa.Boolean(), nullable=False),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["exercise_id"], ["exercises.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["session_id"], ["sessions.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_exercise_session",
        "exercise_sessions",
        ["session_id", "assigned_at"],
        unique=False,
    )
    op.create_index(
        "idx_unique_exercise_session",
        "exercise_sessions",
        ["exercise_id", "session_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_exercise_sessions_assigned_at"),
        "exercise_sessions",
        ["assigned_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_exercise_sessions_exercise_id"),
        "exercise_sessions",
        ["exercise_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_exercise_sessions_session_id"),
        "exercise_sessions",
        ["session_id"],
        unique=False,
    )
    op.create_table(
        "messages",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("role", sa.String(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("timestamp", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "output_mode", sa.String(length=10), server_default="text", nullable=False
        ),
        sa.Column("audio_id", sa.String(length=100), nullable=True),
        sa.Column("audio_url", sa.String(length=500), nullable=True),
        sa.Column(
            "audio_available", sa.Boolean(), server_default="false", nullable=False
        ),
        sa.Column("audio_duration", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(["session_id"], ["sessions.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_messages_audio_id"), "messages", ["audio_id"], unique=False
    )
    op.create_index(op.f("ix_messages_role"), "messages", ["role"], unique=False)
    op.create_index(
        op.f("ix_messages_session_id"), "messages", ["session_id"], unique=False
    )
    op.create_index(
        op.f("ix_messages_timestamp"), "messages", ["timestamp"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_messages_timestamp"), table_name="messages")
    op.drop_index(op.f("ix_messages_session_id"), table_name="messages")
    op.drop_index(op.f("ix_messages_role"), table_name="messages")
    op.drop_index(op.f("ix_messages_audio_id"), table_name="messages")
    op.drop_table("messages")
    op.drop_index(
        op.f("ix_exercise_sessions_session_id"), table_name="exercise_sessions"
    )
    op.drop_index(
        op.f("ix_exercise_sessions_exercise_id"), table_name="exercise_sessions"
    )
    op.drop_index(
        op.f("ix_exercise_sessions_assigned_at"), table_name="exercise_sessions"
    )
    op.drop_index("idx_unique_exercise_session", table_name="exercise_sessions")
    op.drop_index("idx_exercise_session", table_name="exercise_sessions")
    op.drop_table("exercise_sessions")
    op.drop_index(op.f("ix_sessions_subject"), table_name="sessions")
    op.drop_index(op.f("ix_sessions_mode"), table_name="sessions")
    op.drop_index(op.f("ix_sessions_grade"), table_name="sessions")
    op.drop_index(op.f("ix_sessions_created_at"), table_name="sessions")
    op.drop_table("sessions")
    op.drop_index(op.f("ix_exercises_topic"), table_name="exercises")
    op.drop_index(op.f("ix_exercises_subject"), table_name="exercises")
    op.drop_index(op.f("ix_exercises_is_public"), table_name="exercises")
    op.drop_index(op.f("ix_exercises_grade"), table_name="exercises")
    op.drop_index(op.f("ix_exercises_exercise_type"), table_name="exercises")
    op.drop_index(op.f("ix_exercises_difficulty_level"), table_name="exercises")
    op.drop_index(op.f("ix_exercises_created_at"), table_name="exercises")
    op.drop_index("idx_exercise_difficulty", table_name="exercises")
    op.drop_index("idx_exercise_curriculum", table_name="exercises")
    op.drop_table("exercises")
    # ### end Alembic commands ###
